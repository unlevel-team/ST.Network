{"version":3,"sources":["stNetwork/scs_Routes/SCS_RouteNet.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AAgBA,IAAI,UAAU,QAAQ,SAAR,CAAd;;;;;;AAOA,IAAI,oBAAoB,QAAQ,wBAAR,CAAxB;;;;;;AAMA,IAAI,qBAAqB,QAAQ,yBAAR,CAAzB;;;;;;;;;;;;;;;;;;;;IAmBM,Y;;;;;;;;;;;AAWL,uBAAY,YAAZ,EAA0B,eAA1B,EAA2C,gBAA3C,EAA6D;AAAA;;AAE5D,MAAI,YAAY,IAAhB;;AAEA,YAAU,YAAV,GAAyB,IAAzB;AACA,YAAU,QAAV,GAAqB,CAArB;;AAEA,YAAU,YAAV,GAAyB,YAAzB;AACA,YAAU,eAAV,GAA4B,eAA5B;AACA,YAAU,gBAAV,GAA6B,gBAA7B;;AAEA,YAAU,cAAV,GAA2B,IAA3B;AACA,YAAU,eAAV,GAA4B,IAA5B;;AAEA,YAAU,UAAV;AACA,YAAU,gBAAV;AAEA;;;;;;;;;+BAMY;;AAEZ,OAAI,YAAY,IAAhB;;AAEA,OAAI,UAAU,YAAV,KAA2B,IAA/B,EAAqC;AACpC,UAAM,qBAAN;AACA;;AAED,aAAU,YAAV,GAAyB,QAAQ,MAAR,EAAzB;;AAEA,aAAU,cAAV,GAA2B,IAAI,iBAAJ,CAAsB,UAAU,YAAhC,EAA8C,UAAU,eAAxD,CAA3B;AACA,aAAU,eAAV,GAA4B,IAAI,kBAAJ,CAAuB,UAAU,gBAAjC,CAA5B;AAEA;;;;;;;;qCAMkB;;AAElB,OAAI,YAAY,IAAhB;;AAEA,OAAI,UAAU,YAAV,KAA2B,IAA/B,EAAqC;AACpC,UAAM,iBAAN;AACA;;AAED,aAAU,YAAV,CAAuB,GAAvB,CAA2B,QAA3B,EAAqC,UAAU,cAAV,CAAyB,YAA9D;AACA,aAAU,YAAV,CAAuB,GAAvB,CAA2B,SAA3B,EAAsC,UAAU,eAAV,CAA0B,YAAhE;AAEA;;;;;;AAKF,OAAO,OAAP,GAAiB,YAAjB","file":"stNetwork/scs_Routes/SCS_RouteNet.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Server Control System - Net routes\r\n * \r\n * @namespace st.net.scs_routes\r\n * @memberof st.net\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * Import express\r\n * @ignore\r\n */\r\nlet express = require('express');\r\n\r\n\r\n/**\r\n * Import SCS_RouteNetNodes\r\n * @ignore\r\n */\r\nlet SCS_RouteNetNodes = require(\"./SCS_RouteNetNodes.js\");\r\n\r\n/**\r\n * Import SCS_RouteNetServer\r\n * @ignore\r\n */\r\nlet SCS_RouteNetServer = require(\"./SCS_RouteNetServer.js\");\r\n\r\n/**\r\n * Routes for Net\r\n * <pre>\r\n * Use with Server control service\r\n * </pre>\r\n * \r\n * @class\r\n * @memberof st.net.scs_routes\r\n * \r\n * @property {NodesManager} nodesManager - Nodes manager\r\n * @property {st.net.services.NodesNetManager} nodesNetManager - Nodes Net manager\r\n * @property {object} expressRoute - Express route object\r\n * \r\n * @property {st.net.scs_routes.SCS_RouteNetNodes} routesforNodes - Routes for Nodes\r\n * @property {st.net.scs_routes.SCS_RouteNetServer} routesforServer - Routes for Server\r\n * \r\n */\r\nclass SCS_RouteNet {\r\n\r\n\t\r\n\t/**\r\n\t * \r\n\t * @constructs SCS_RouteNet\r\n\t * \r\n\t * @param {NodesManager} nodesManager - Nodes manager\r\n\t * @param {st.net.services.NodesNetManager} nodesNetManager - Nodes Net manager\r\n\t * \r\n\t */\r\n\tconstructor(nodesManager, nodesNetManager, serverNetManager) {\r\n\r\n\t\tlet routerNet = this;\r\n\r\n\t\trouterNet.expressRoute = null;\r\n\t\trouterNet.messages = 0;\r\n\r\n\t\trouterNet.nodesManager = nodesManager;\r\n\t\trouterNet.nodesNetManager = nodesNetManager;\r\n\t\trouterNet.serverNetManager = serverNetManager;\r\n\r\n\t\trouterNet.routesforNodes = null;\r\n\t\trouterNet.routesforServer = null;\r\n\r\n\t\trouterNet.initialize();\r\n\t\trouterNet.mapServiceRoutes();\r\n\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\r\n\t\tlet routerNet = this;\r\n\r\n\t\tif (routerNet.expressRoute !== null) {\r\n\t\t\tthrow \"Already initialized\";\r\n\t\t}\r\n\r\n\t\trouterNet.expressRoute = express.Router();\r\n\r\n\t\trouterNet.routesforNodes = new SCS_RouteNetNodes(routerNet.nodesManager, routerNet.nodesNetManager);\r\n\t\trouterNet.routesforServer = new SCS_RouteNetServer(routerNet.serverNetManager);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Map service routes\r\n\t */\r\n\tmapServiceRoutes() {\r\n\r\n\t\tlet routerNet = this;\r\n\r\n\t\tif (routerNet.expressRoute === null) {\r\n\t\t\tthrow \"Not initialized\";\r\n\t\t}\r\n\r\n\t\trouterNet.expressRoute.use('/Nodes', routerNet.routesforNodes.expressRoute);\r\n\t\trouterNet.expressRoute.use('/Server', routerNet.routesforServer.expressRoute);\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nmodule.exports = SCS_RouteNet;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNetwork\\es6"}