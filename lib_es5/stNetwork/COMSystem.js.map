{"version":3,"sources":["stNetwork/COMSystem.js"],"names":[],"mappings":"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","file":"stNetwork/COMSystem.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * COMSystem library\r\n * \r\n * Provides communications system to ST network\r\n * \r\n */\r\n\r\n\r\n/**\r\n * Import EventEmitter\r\n * @ignore\r\n */\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n/**\r\n * Import DataMessage\r\n * @ignore\r\n */\r\nlet DataMessage = require('./DataChannel.js').DataMessage;\r\n\r\n\r\n/**\r\n * COMSystem constants\r\n * \r\n * @memberof st.net\r\n * \r\n * @static\r\n */\r\nconst COMSystem_CONSTANTS = {\r\n\t\r\n\t\"Config\" : {\r\n\t\t\r\n\t\t\"Role_Server\" : \"Server\",\r\n\t\t\"Role_Node\" : \"Node\",\r\n\t\t\r\n\t\t\"BindType_DCtoSensor\" : \"DCtoSensor\",\r\n\t\t\"BindType_DCtoActuator\" : \"DCtoActuator\"\r\n\t},\r\n\t\r\n\t\r\n\t\"States\" : {\r\n\t\t\"State_Config\" : \"config\",\r\n\t\t\"State_ConfigNet\" : \"configNet\",\r\n\t\t\"State_Ready\" : \"ready\",\r\n\t\t\"State_Working\" : \"working\",\r\n\t\t\"State_Stop\" : \"stop\"\r\n\t},\r\n\t\r\n\t\r\n\t\"Events\" : {\r\n\t\t\"Bind_Started\": \"BindStarted\",\r\n\t\t\"Bind_Stopped\": \"BindStopped\",\r\n\t\t\"Unbind\": \"Unbind\",\r\n\t\t\r\n\t\t\"Bind_Added\": \"BindAdded\",\r\n\t\t\"Bind_Removed\": \"BindRemoved\"\r\n\t\t\r\n\t},\r\n\t\r\n\t\r\n\t\"Messages\" : {\r\n\t\t\"getBindList\" : \"Get BindList\",\r\n\t\t\"BindList\" : \"BindList\",\r\n\r\n\t\t\r\n\t\t\"createBind\" : \"Create Bind\",\r\n\t\t\"Bind_Created\": \"BindCreated\",\r\n\t\t\"getBindOptions\" : \"Get BindOptions\",\r\n\t\t\"setBindOptions\" : \"Set BindOptions\",\r\n\t\t\"BindOptionsUpdated\" : \"BindOptionsUpdated\",\r\n\t\t\"startBind\": \"Start Bind\",\r\n\t\t\r\n\t\t\"BindStarted\": \"Bind Started\",\r\n\t\t\"UnBind\": \"UnBind\",\r\n\t\t\"BindFree\": \"BindFree\",\r\n\r\n\t\t\"ErrorInfo\": \"ErrorInfo\"\r\n\t}\r\n\t\t\r\n};\r\n\r\n\r\n/**\r\n * ThingBind\r\n * \r\n * @class\r\n * @memberof st.net\r\n * \r\n * @property {string} version - Version\r\n * @property {string} bindID - Bind ID\r\n * @property {string} type - Bind type\r\n * @property {string} role - Bind role\r\n * @property {string} state - Bind state\r\n * @property {object} source - Bind source\r\n * @property {object} target - Bind target\r\n * @property {object} options - Options\r\n * @property {object} eventEmitter - Object for emit events.\r\n * \r\n */\r\nclass ThingBind {\r\n\t\r\n\t/**\r\n\t * @constructs ThingBind\r\n\t * \r\n\t * @param {string} type - Type\r\n\t * @param {object} source - Source\r\n\t * @param {object} target - Target\r\n\t * @param {object} options - Options\r\n\t * \r\n\t */\r\n\tconstructor(type, source, target, options) {\r\n\t\t\r\n\t\tthis.CONSTANTS = COMSystem_CONSTANTS;\r\n\t\t\r\n\t\tthis.version = null;\r\n\t\t\r\n\t\tthis.bindID = null;\r\n\t\tthis.type = type;\r\n\t\tthis.role = null;\r\n\t\tthis.state = this.CONSTANTS.States.State_Config;\r\n\t\t\r\n\t\tthis.source = source;\r\n\t\tthis.target = target;\r\n\t\tthis.options = options;\r\n\t\t\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize Bind\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tswitch (tbind.type) {\r\n\t\t\tcase tbind.CONSTANTS.Config.BindType_DCtoSensor:\r\n\t\t\t\ttbind._init_DCtoSensor();\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase tbind.CONSTANTS.Config.BindType_DCtoActuator:\r\n\t\t\t\ttbind._init_DCtoActuator();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"Bad type.\";\r\n//\t\t\t\tbreak;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind DC to Sensor\r\n\t */\r\n\t_init_DCtoSensor() {\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind DC to Actuator\r\n\t */\r\n\t_init_DCtoActuator() {\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Start Bind\r\n\t * \r\n\t * @param {boolean} synchro - Synchronization (true or false)\r\n\t * @param {object} options - Options object\r\n\t */\r\n\tstart(synchro, options) {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tif (synchro === undefined) {\r\n\t\t\tsynchro = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = [];\r\n\t\t}\r\n\t\t\r\n\t\ttbind.state = tbind.CONSTANTS.States.State_Working;\r\n\t\t\r\n\t\ttbind.eventEmitter.emit(tbind.CONSTANTS.Events.Bind_Started,\r\n\t\t\t{\r\n\t\t\t\t\"synchro\" : synchro,\r\n\t\t\t\t\"options\" : options\r\n\t\t\t}\t\t\t\r\n\t\t);\t// Emit event Bind_Started\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stop Bind\r\n\t * \r\n\t * @param {boolean} synchro - Synchronization (true or false)\r\n\t * @param {object} options - Options object\r\n\t */\r\n\tstop(synchro, options) {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tif (synchro === undefined) {\r\n\t\t\tsynchro = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = [];\r\n\t\t}\r\n\t\t\r\n\t\ttbind.state = tbind.CONSTANTS.States.State_Stop;\r\n\t\t\r\n\t\ttbind.eventEmitter.emit(tbind.CONSTANTS.Events.Bind_Stopped,\r\n\t\t\t{\r\n\t\t\t\t\"synchro\" : synchro,\r\n\t\t\t\t\"options\" : options\r\n\t\t\t}\r\n\t\t);\t// Emit event Bind_Stopped\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Unbind\r\n\t * \r\n\t * @param {boolean} synchro - Synchronization (true or false)\r\n\t * @param {object} options - Options object\r\n\t */\r\n\tunbind(synchro, options) {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tif (synchro === undefined) {\r\n\t\t\tsynchro = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = [];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\ttbind.state = tbind.CONSTANTS.States.State_Config;\r\n\t\t\r\n\t\t// Emit event Unbind\r\n\t\ttbind.eventEmitter.emit(tbind.CONSTANTS.Events.Unbind, \r\n\t\t\t{\r\n\t\t\t\t\"synchro\" : synchro,\r\n\t\t\t\t\"options\" : options\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * COMSystem\r\n * \r\n * @class\r\n * @memberof st.net\r\n * \r\n * @property {string} version - Version\r\n * @property {object} config - Configuration object\r\n * @property {object} controlChannel - Control channel object\r\n * @property {st.net.ThingBind[]} thingsBindings - ThingBinds list\r\n * \r\n */\r\nclass COMSystem {\r\n\t\r\n\t/**\r\n\t * @constructs COMSystem\r\n\t */\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tthis.CONSTANTS = COMSystem_CONSTANTS;\r\n\t\tthis.version = this.CONSTANTS.Config.Version;\r\n\t\tthis.config = config;\r\n\t\t\r\n\t\t\r\n\t\tthis.controlChannel = null;\r\n\t\tthis.thingsBindings = [];\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize COMSystem\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet comSYS = this;\r\n\t\t\r\n\t\tif (comSYS.config === undefined) {\r\n\t\t\tthrow \"Configuration is required.\";\r\n\t\t}\r\n\t\t\r\n\t\tlet _config = comSYS.config;\r\n\t\t\r\n//\t\tif (_config.controlChannel == undefined) {\r\n//\t\t\tthrow \"controlChannel is required.\";\r\n//\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add bind\r\n\t * \r\n\t * @param {st.net.ThingBind} tbind - The ThingBind object\r\n\t * @param {boolean} synchro - Synchronization (true or false)\r\n\t * @param {object} options - Options\r\n\t */\r\n\taddBind(tbind, synchro, options) {\r\n\t\t\r\n\t\tlet comSYS = this;\r\n\t\t\r\n\t\tlet tbSearch = comSYS.getBindByID(tbind.bindID);\r\n\t\t\r\n\t\tif (synchro === undefined) {\r\n\t\t\tsynchro = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = [];\r\n\t\t}\r\n\t\t\r\n\t\tif (tbSearch.tbind !== null) {\r\n\t\t\tthrow \"Bind ID already exists.\";\r\n\t\t}\r\n\t\t\r\n\t\tcomSYS.thingsBindings.push(tbind);\r\n\t\t\r\n\t\t// Emit event Bind_Added\r\n\t\tcomSYS.eventEmitter.emit( comSYS.CONSTANTS.Events.Bind_Added, \r\n\t\t\t{\r\n\t\t\t\t\"synchro\": synchro, \r\n\t\t\t\t\"options\": options,\r\n\t\t\t\t\"bind\": tbind\r\n\t\t\t}\r\n\t\t);\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get Bind searched by ID\r\n\t */\r\n\tgetBindByID(bindID){\r\n\t\t\r\n\t\tlet comSYS = this;\r\n\t\t\r\n\t\tlet _i = 0;\r\n\t\tlet tbind = null;\r\n\t\t\r\n\t\t\r\n\t\t_i = comSYS.thingsBindings.map(function(x) {return x.bindID; }).indexOf(bindID);\r\n\t\tif (_i !== -1) {\r\n\t\t\ttbind = comSYS.thingsBindings[_i];\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn {\r\n\t\t\t\"tbind\" : tbind,\r\n\t\t\t\"position\": _i\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Remove Bind\r\n\t * \r\n\t * @param {st.net.ThingBind} tbind - The ThingBind object\r\n\t * @param {boolean} synchro - Synchronization (true or false)\r\n\t * @param {object} options - Options\r\n\t */\r\n\tremoveBind(bindID, synchro, options) {\r\n\t\t\r\n\t\tlet comSYS = this;\r\n\t\t\r\n\t\tif (synchro === undefined) {\r\n\t\t\tsynchro = true;\r\n\t\t}\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = [];\r\n\t\t}\r\n\t\t\r\n\t\tlet bindSearch = comSYS.getBindByID(bindID);\r\n\t\tif (bindSearch.tbind === null){\r\n\t\t\tthrow \"Bind not found.\";\r\n\t\t}\r\n\t\t\r\n\t\tlet tbind = bindSearch.tbind;\r\n\t\t\r\n\t\tif (tbind.state !== comSYS.CONSTANTS.States.State_Config) {\r\n\t\t\tthrow \"Bad Bind state.\";\r\n\t\t}\r\n\t\t\r\n\t\tcomSYS.thingsBindings.splice(bindSearch.position, 1);\r\n\t\t\r\n\t\t// Emit event Bind_Removed\r\n\t\tcomSYS.eventEmitter.emit( comSYS.CONSTANTS.Events.Bind_Removed, \r\n\t\t\t{\r\n\t\t\t\t\"synchro\": synchro, \r\n\t\t\t\t\"options\": options,\r\n\t\t\t\t\"bindID\": bindID\r\n\t\t\t}\r\n\t\t);\t\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\n/**\r\n * Get COMSystem\r\n * \r\n * @memberof st.net\r\n * \r\n * @param {object} config - Configuration object\r\n * @returns {st.net.COMSystem}\r\n */\r\nfunction getCOMSystem(config) {\r\n\t\r\n\tlet _getCOMSystem = require('./comSYS_Morse/COMsys_Morse.js').getCOMSystem;\r\n\tlet comSYS = _getCOMSystem(config);\r\n\r\n\treturn comSYS;\r\n}\r\n\r\n\r\n\r\n\r\nlet comsystem_Lib = {\r\n\t\t\"COMSystem_CONSTANTS\" : COMSystem_CONSTANTS,\r\n\t\t\"ThingBind\" : ThingBind,\r\n\t\t\"COMSystem\" : COMSystem,\r\n\t\t\r\n\t\t\"getCOMSystem\": getCOMSystem\r\n};\r\n\r\n\r\nmodule.exports = comsystem_Lib;"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNetwork\\es6"}