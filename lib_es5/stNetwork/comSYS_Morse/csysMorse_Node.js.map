{"version":3,"sources":["stNetwork/comSYS_Morse/csysMorse_Node.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAI,cAAc,QAAQ,mBAAR,EAA6B,WAA/C;;;;;;AAOA,IAAI,cAAc,QAAQ,mBAAR,EAA6B,WAA/C;;;;;;AAMA,IAAI,kBAAkB,QAAQ,mBAAR,EAA6B,eAAnD;;;;;;AAOA,IAAI,wBAAwB,QAAQ,6BAAR,EAAuC,qBAAnE;;;;;;;;;;;IAYM,gB;;;;;;;;;;;;;AAWL,2BAAY,IAAZ,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,OAAlC,EAA2C;AAAA;;AAAA,6FACpC,IADoC,EAC9B,MAD8B,EACtB,MADsB,EACd,OADc;AAE1C;;;;;;;;;qCAMkB;;AAElB,OAAI,QAAQ,IAAZ;;AAEA,OAAI,KAAK,MAAM,MAAf;AACA,OAAI,SAAS,MAAM,MAAnB;;AAEA,OAAI,MAAM,OAAN,KAAkB,SAAlB,IACF,MAAM,OAAN,CAAc,MAAd,KAAyB,SAD3B,EACsC;AACrC,UAAM,2BAAN;AACA;;AAGD,SAAM,MAAN,GAAe,MAAM,SAAN,CAAgB,MAAhB,CAAuB,mBAAvB,GAA6C,MAAM,OAAN,CAAc,MAA1E,C;;;AAGA,SAAM,aAAN,GAAsB,UAAS,IAAT,EAAe;;AAEpC,QAAI,MAAM,KAAN,KAAgB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,aAA3C,EAA0D;AACzD;AACA;;AAED,QAAI,MAAM,OAAN,CAAc,YAAlB,EAAgC;AAC/B,WAAM,OAAN,CAAc,YAAd,CAA2B,IAA3B;AACA;;AAED,QAAI,MAAM,IAAI,WAAJ,CAAgB,IAAhB,CAAV;AACA,QAAI,SAAJ,GAAgB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,OAAvC;AACA,QAAI,MAAJ,GAAa;AACZ,eAAU,MAAM;AADJ,KAAb;;AAIA,OAAG,WAAH,CAAe,GAAf;AACA,IAjBD;;;AAqBA,UAAO,YAAP,CAAoB,EAApB,CAAuB,OAAO,SAAP,CAAiB,MAAjB,CAAwB,UAA/C,EAA2D,MAAM,aAAjE;;AAEA,SAAM,KAAN,GAAc,MAAM,SAAN,CAAgB,MAAhB,CAAuB,WAArC;AACA;;;;;;;;uCAMoB;;AAEpB,OAAI,QAAQ,IAAZ;AACA,OAAI,KAAK,MAAM,MAAf;AACA,OAAI,WAAW,MAAM,MAArB;;AAEA,OAAI,MAAM,OAAN,KAAkB,SAAlB,IACF,MAAM,OAAN,CAAc,MAAd,KAAyB,SAD3B,EACsC;AACrC,UAAM,2BAAN;AACA;;AAED,OAAI,MAAM,OAAN,CAAc,MAAd,KAAyB,SAA7B,EAAwC;AACvC,UAAM,8BAAN;AACA;;AAGD,OAAI,SAAS,MAAM,OAAN,CAAc,MAA3B;;AAEA,SAAM,MAAN,GAAe,MAAM,SAAN,CAAgB,MAAhB,CAAuB,qBAAvB,GAA+C,MAAM,OAAN,CAAc,MAA5E,C;;;AAIA,SAAM,aAAN,GAAsB,UAAS,IAAT,EAAe;;AAEpC,QAAI,MAAM,KAAN,KAAgB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,aAA3C,EAA0D;AACzD;AACA;;AAED,QAAI,MAAM,OAAN,CAAc,YAAlB,EAAgC;AAC/B,WAAM,OAAN,CAAc,YAAd,CAA2B,IAA3B;AACA;;AAED,aAAS,IAAT,CAAc,SAAS,SAAT,CAAmB,MAAnB,CAA0B,YAAxC,EAAsD,IAAtD,E;AAEA,IAZD;;AAeA,UAAO,MAAP,CAAc,EAAd,E;;;AAGA,UAAO,YAAP,CAAoB,EAApB,CAAuB,MAAM,MAA7B,EAAqC,MAAM,aAA3C;AAEA;;;;;;;;2BAMQ;;AAER,OAAI,QAAQ,IAAZ;;AAEA,WAAQ,MAAM,IAAd;;AAEC,SAAK,MAAM,SAAN,CAAgB,MAAhB,CAAuB,mBAA5B;;AAEC,SAAI,SAAS,MAAM,MAAnB;;;AAGA,YAAO,YAAP,CAAoB,cAApB,CAAmC,OAAO,SAAP,CAAiB,MAAjB,CAAwB,UAA3D,EAAuE,MAAM,aAA7E;AACA;;AAED,SAAK,MAAM,SAAN,CAAgB,MAAhB,CAAuB,qBAA5B;;AAEC,SAAI,SAAS,MAAM,OAAN,CAAc,MAA3B;;;AAGA,YAAO,YAAP,CAAoB,cAApB,CAAmC,MAAM,MAAzC,EAAiD,MAAM,aAAvD;AACA;;AAED;AACC;;AAnBF;;AAuBA;AACA;;;;EA7I6B,W;;;;;;;;;;;;IAyJzB,e;;;;;;;;;;;AASL,0BAAY,MAAZ,EAAoB;AAAA;;AAAA,4FAEb,MAFa;AAMnB;;;;;;;;;+BAMY;;AAEZ;;AAEA,OAAI,SAAS,IAAb;AACA,OAAI,UAAU,OAAO,MAArB;;AAEA,UAAO,QAAP,GAAkB,IAAI,qBAAJ,CAA0B,MAA1B,CAAlB;AACA;;;;EA7B4B,e;;AAmC9B,IAAI,wBAAwB;AAC1B,qBAAqB,gBADK;AAE1B,oBAAoB;AAFM,CAA5B;;AAMA,OAAO,OAAP,GAAiB,qBAAjB","file":"stNetwork/comSYS_Morse/csysMorse_Node.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * \r\n * COMSystem library\r\n * for role Server\r\n * \r\n * Provides communications system to ST network\r\n * \r\n * \r\n * \r\n * v. Morse\r\n */\r\n\r\n\r\n/**\r\n * import DataMessage\r\n * @ignore\r\n */\r\nlet DataMessage = require('../DataChannel.js').DataMessage;\r\n\r\n\r\n/**\r\n * import TBind_Morse\r\n * @ignore\r\n */\r\nlet TBind_Morse = require('./COMsys_Morse.js').TBind_Morse;\r\n\r\n/**\r\n * import COMSystem_Morse\r\n * @ignore\r\n */\r\nlet COMSystem_Morse = require('./COMsys_Morse.js').COMSystem_Morse;\r\n\r\n\r\n/**\r\n * import COMSys_Morse_Srv_Node\r\n * @ignore\r\n */\r\nlet COMSys_Morse_Srv_Node = require('./csysMorse_NodeServices.js').COMSys_Morse_Srv_Node;\r\n\r\n\r\n\r\n/**\r\n * ThingBind for role Node\r\n * \r\n * @class\r\n * @memberof st.net.comsys_morse\r\n * @implements st.net.comsys_morse.TBind_Morse\r\n * \r\n */\r\nclass TBind_Morse_Node extends TBind_Morse {\r\n\t\r\n\t/**\r\n\t * @constructs TBind_Morse_Node\r\n\t * \r\n\t * @param {string} type - Type of bind\r\n\t * @param {object} source - Source\r\n\t * @param {object} target - Target\r\n\t * @param {object} options - Options object\r\n\t * \r\n\t */\r\n\tconstructor(type, source, target, options) {\r\n\t\tsuper(type, source, target, options);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind DC to Sensor\r\n\t */\r\n\t_init_DCtoSensor() {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tlet dc = tbind.target;\r\n\t\tlet sensor = tbind.source;\r\n\t\t\r\n\t\tif (tbind.options === undefined || \r\n\t\t\t\ttbind.options.bindID === undefined) {\r\n\t\t\tthrow \"This bind requires an ID.\";\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\ttbind.bindID = tbind.CONSTANTS.Config.BindType_DCtoSensor + tbind.options.bindID;\t// Set bind ID\r\n\t\t\r\n\t\t// Define bind function\r\n\t\ttbind._bindFunction = function(data) {\r\n\t\t\t\r\n\t\t\tif (tbind.state !== tbind.CONSTANTS.States.State_Working) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tbind.options.bindFunction) {\r\n\t\t\t\ttbind.options.bindFunction(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet msg = new DataMessage(data);\r\n\t\t\tmsg.typeExtra = tbind.CONSTANTS.Config.Version;\r\n\t\t\tmsg._Morse = {\r\n\t\t\t\t\"bindID\": tbind.bindID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tdc.sendMessage(msg);\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\t// Map event SensorData\r\n\t\tsensor.eventEmitter.on(sensor.CONSTANTS.Events.SensorData, tbind._bindFunction );\r\n\t\t\r\n\t\ttbind.state = tbind.CONSTANTS.States.State_Ready;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Bind DC to Actuator\r\n\t */\r\n\t_init_DCtoActuator() {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\tlet dc = tbind.source;\r\n\t\tlet actuator = tbind.target;\r\n\t\t\r\n\t\tif (tbind.options === undefined || \r\n\t\t\t\ttbind.options.bindID === undefined) {\r\n\t\t\tthrow \"This bind requires an ID.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (tbind.options.comSYS === undefined) {\r\n\t\t\tthrow \"This bind requires a comSYS.\";\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet comSYS = tbind.options.comSYS;\r\n\t\t\r\n\t\ttbind.bindID = tbind.CONSTANTS.Config.BindType_DCtoActuator + tbind.options.bindID;\t// Set bind ID\r\n\t\t\r\n\t\t\r\n\t\t// Define bind function\r\n\t\ttbind._bindFunction = function(data) {\r\n\t\t\t\r\n\t\t\tif (tbind.state !== tbind.CONSTANTS.States.State_Working) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tbind.options.bindFunction) {\r\n\t\t\t\ttbind.options.bindFunction(data);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tactuator.emit(actuator.CONSTANTS.Events.ActuatorData, data);\t// Emit event ActuatorData\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tcomSYS.bindDC(dc);\t// Bind Communications system to DC\r\n\t\t\r\n\t\t// Map event `bindID`\r\n\t\tcomSYS.eventEmitter.on(tbind.bindID, tbind._bindFunction);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Unbind\r\n\t */\r\n\tunbind() {\r\n\t\t\r\n\t\tlet tbind = this;\r\n\t\t\r\n\t\tswitch (tbind.type) {\r\n\t\t\r\n\t\t\tcase tbind.CONSTANTS.Config.BindType_DCtoSensor:\r\n\t\t\t\t\r\n\t\t\t\tlet sensor = tbind.target;\r\n\t\t\t\t\r\n\t\t\t\t// UnMap event SensorData\r\n\t\t\t\tsensor.eventEmitter.removeListener(sensor.CONSTANTS.Events.SensorData, tbind._bindFunction);\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase tbind.CONSTANTS.Config.BindType_DCtoActuator:\r\n\t\t\t\t\r\n\t\t\t\tlet comSYS = tbind.options.comSYS;\r\n\t\t\t\t\r\n\t\t\t\t// UnMap event `bindID`\r\n\t\t\t\tcomSYS.eventEmitter.removeListener(tbind.bindID, tbind._bindFunction);\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\t\tsuper.unbind();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Communications System for Node role\r\n * \r\n * @class\r\n * @memberof st.net.comsys_morse\r\n * @implements st.net.comsys_morse.COMSystem_Morse\r\n *  \r\n */\r\nclass CSYS_Morse_Node extends COMSystem_Morse {\r\n\t\r\n\t/**\r\n\t * \r\n\t * @constructs CSYS_Morse_Node\r\n\t * \r\n\t * @param {object} config - Configuration object\r\n\t * \r\n\t */\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tsuper.initialize();\r\n\t\t\r\n\t\tlet comSYS = this;\r\n\t\tlet _config = comSYS.config;\r\n\t\t\r\n\t\tcomSYS._service = new COMSys_Morse_Srv_Node(comSYS);\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nlet cysMorse_roleNode_Lib = {\r\n\t\t\"TBind_Morse_Node\" : TBind_Morse_Node,\r\n\t\t\"CSYS_Morse_Node\" : CSYS_Morse_Node\r\n};\r\n\r\n\r\nmodule.exports = cysMorse_roleNode_Lib;\r\n\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNetwork\\es6"}