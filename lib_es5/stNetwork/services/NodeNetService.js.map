{"version":3,"sources":["stNetwork/services/NodeNetService.js"],"names":[],"mappings":"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","file":"stNetwork/services/NodeNetService.js","sourcesContent":["\"use strict\";\r\n\r\n\r\n/*\r\n Node Net service\r\n\r\n - Provides net service for node.\r\n - Add node to Net service\r\n - Remove data channel from node\r\n - Get data channels of node\r\n\r\n\r\n*/\r\n\r\n\r\nlet NETservices_CONSTANTS = require('./NETservices.js').NETservices_CONSTANTS;\r\n\r\n\r\n/**\r\n * Node net service\r\n */\r\nclass NodeNetService {\r\n\t\r\n\tconstructor(node, nodeNetManager) {\r\n\t\t\r\n\t\tthis.node = node;\r\n\t\tthis.nodeNetManager = nodeNetManager;\r\n\t\t\r\n\t\tthis.CONSTANTS = NETservices_CONSTANTS;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tthis._mapControlEvents();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t */\r\n\t_mapControlEvents() {\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\t// Map event ConnectedToServer\r\n\t\tnodeCtrlSrv.eventEmitter.on(nodeCtrlSrv.CONSTANTS.Events.ConnectedToServer, function() {\r\n\t\t\tif (!nnets._mapControlMessages_OK) {\r\n\t\t\t\tnnets._mapControlMessages(node, node.socket);\r\n\t\t\t}\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t// Map event DataChannelAdded\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelAdded, function(data){\r\n\t\t\tnnets._event_DataChannelAdded(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t\t// Map event DataChannelRemoved\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.DataChannelRemoved, function(data) {\r\n\t\t\tnnets._event_DataChannelRemoved(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t\t// Map event ChannelInitialized\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.ChannelInitialized, function(data){\r\n\t\t\tnnets._event_ChannelInitialized(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t\t// Map event ChannelStarted\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.ChannelStarted, function(data){\r\n\t\t\tnnets._event_ChannelStarted(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t\t// Map event ChannelStopped\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.ChannelStopped, function(data){\r\n\t\t\tnnets._event_ChannelStopped(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t\t// Map event ChannelClosed\r\n\t\tnnetm.eventEmitter.on(nnetm.CONSTANTS.Events.ChannelClosed, function(data){\r\n\t\t\tnnets._event_ChannelClosed(data, nnets);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t */\r\n\t_mapControlMessages(node, socket) {\r\n\t\tlet nnets = this;\r\n\t\tlet _node = node;\r\n\t\tlet nodeCtrlSrv = _node.nodeControlService;\r\n\t\tlet nodeConfig = _node.nodeConfiguration.config;\r\n\r\n\t\t\r\n\t\tif (socket === undefined) {\r\n\t\t\tsocket = nodeCtrlSrv.socket;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tnnets._mapControlMessages_OK = true;\r\n\t\t\r\n\t\t// Map event disconnect \r\n\t\tsocket.on('disconnect', function(){\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.getNetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.NetInfo);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.createDataChannel);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.deleteDataChannel);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.getDataChannelOptions);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.SetDCOptions);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.initDC);\r\n\t\t\tsocket.removeAllListeners(nnets.CONSTANTS.Messages.closeDC);\r\n\r\n\r\n//\t\t\t_node.config._nodesNetService = null;\r\n\t\t\tnnets._mapControlMessages_OK = null;\r\n\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message getNetInfo\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.getNetInfo, function(msg){\r\n\t\t\tnnets._msg_getNetInfo(msg, socket, {\r\n\t\t\t\t\"node\" : nodeConfig.nodeID,\r\n\t\t\t\t\"socket\" : socket\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n//\t\t// Map message NetInfo\r\n//\t\tsocket.on(nnets.CONSTANTS.Messages.NetInfo, function(msg){\r\n//\t\t\tnnets._msg_getNetInfo(msg, socket, {\r\n//\t\t\t\t\"node\" : _node.config.nodeID,\r\n//\t\t\t\t\"socket\" : socket\r\n//\t\t\t});\r\n//\t\t  });\r\n\t\t\r\n\t\t// Map message createDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.createDataChannel, function(msg){\r\n\t\t\tnnets._msg_createDataChannel(msg, socket, msg);\r\n\t\t  });\t\r\n\t\r\n\t\t// Map message deleteDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.deleteDataChannel, function(msg){\r\n\t\t\tnnets._msg_deleteDataChannel(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t});\r\n\t\t  });\t\r\n\t\t\r\n\t\t// Map message getDataChannelOptions\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.getDataChannelOptions, function(msg){\r\n\t\t\tnnets._msg_getDataChannelOptions(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\": msg.channelID\r\n\t\t\t});\r\n\t\t  });\t\r\n\t\t\r\n\t\t// Map message SetDCOptions\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.SetDCOptions, function(msg){\r\n\t\t\tnnets._msg_SetDCOptions(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID,\r\n\t\t\t\t\"options\" : msg.options\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message initDC\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.initDC, function(msg){\r\n\t\t\tnnets._msg_initDC(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message closeDC\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.closeDC, function(msg){\r\n\t\t\tnnets._msg_closeDC(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\t// Map message startDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.startDataChannel, function(msg){\r\n\t\t\tnnets._msg_startDataChannel(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t// Map message stopDataChannel\r\n\t\tsocket.on(nnets.CONSTANTS.Messages.stopDataChannel, function(msg){\r\n\t\t\tnnets._msg_stopDataChannel(msg, socket, {\r\n\t\t\t\t\"node\" : _node,\r\n\t\t\t\t\"nodeID\" : nodeConfig.nodeID,\r\n\t\t\t\t\"channelID\" : msg.channelID\r\n\t\t\t});\r\n\t\t  });\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._mapControlMessages');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event DataChannelAdded\r\n\t */\r\n\t_event_DataChannelAdded(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet channelID = data;\r\n\t\t\r\n\t\tlet channelSearch = nnetm.getDataChannelByID(channelID);\r\n\t\tlet dch = channelSearch.dataChannel;\r\n\t\t\r\n\t\tlet message = {\r\n\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\"_chnID\" : dch.config._dchID,\r\n\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\"socketPort\" : dch.config.socketPort,\r\n\t\t\t\"netLocation\" : dch.config.netLocation\r\n\t\t};\r\n\t\t\r\n\t\t// Emit message DataChannelCreated\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelCreated, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_DataChannelAdded');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event DataChannelRemoved\r\n\t */\r\n\t_event_DataChannelRemoved(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet channelID = data;\r\n\t\r\n\t\tlet message = {\r\n\t\t\t\t\"channelID\" : channelID\r\n\t\t\t};\r\n\t\t\t\r\n\t\t// Emit message DataChannelDeleted\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelDeleted, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_DataChannelRemoved');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ChannelInitialized\r\n\t */\r\n\t_event_ChannelInitialized(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet dch = data.dataChannel;\r\n\t\t\r\n\t\tlet message = {\r\n\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\"_chnID\" : dch.config._dchID\r\n\t\t};\r\n\t\t\r\n\t\t// Emit message DCInitialized\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DCInitialized, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_ChannelInitialized');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ChannelStarted\r\n\t */\r\n\t_event_ChannelStarted(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet dch = data.dataChannel;\r\n\t\t\r\n\t\tlet message = {\r\n\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\"_chnID\" : dch.config._dchID\r\n\t\t};\r\n\t\t\r\n\t\t// Emit message DataChannelStarted\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelStarted, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_ChannelStarted');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ChannelStarted\r\n\t */\r\n\t_event_ChannelStopped(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet dch = data.dataChannel;\r\n\t\t\r\n\t\tlet message = {\r\n\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\"_chnID\" : dch.config._dchID\r\n\t\t};\r\n\t\t\r\n\t\t// Emit message DataChannelStarted\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DataChannelStopped, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_ChannelStopped');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ChannelClosed\r\n\t */\r\n\t_event_ChannelClosed(data, nnets) {\r\n\t\t\r\n\t\tif (nnets === undefined) {\r\n\t\t\tnnets = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tlet node = nnetm.config._node;\r\n\t\tlet nodeCtrlSrv = node.nodeControlService;\r\n\t\t\r\n\t\tlet dch = data.dataChannel;\r\n\t\t\r\n\t\tlet message = {\r\n\t\t\t\"channelID\" : dch.config.id,\r\n\t\t\t\"_chnID\" : dch.config._dchID\r\n\t\t};\r\n\t\t\r\n\t\t// Emit message DCClosed\r\n\t\tnodeCtrlSrv.socket.emit(nnets.CONSTANTS.Messages.DCClosed, message); \r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._event_ChannelClosed');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(message);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getNetInfo\r\n\t */\r\n\t_msg_getNetInfo(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_getNetInfo');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\tlet message = {};\r\n\t\t\r\n\t\tmessage.dataChannels = [];\r\n\t\t\r\n\t\tnnetm.channelsList.forEach(function(dch, _i) {\n\t\t\tvar channelInfo = {\r\n\t\t\t\t\t\"id\" : dch.config.id,\r\n\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\"type\" : dch.config.type,\r\n\t\t\t\t\t\"state\" : dch.state\r\n\r\n\t\t\t\t};\r\n\t\t\tmessage.dataChannels.push(channelInfo);\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\tsocket.emit(nnets.CONSTANTS.Messages.NetInfo, message);\t// Emit message NetInfo\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message createDataChannel\r\n\t */\r\n\t_msg_createDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tlet message = {};\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_createDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\tnnetm.addDataChannelToNode(options.channelID, options);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message deleteDataChannel\r\n\t */\r\n\t_msg_deleteDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\tvar message = {};\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_deleteDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\tnnetm.removeDataChannelFromNode(options.channelID);\r\n\t\t\t\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_deleteDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getDataChannelOptions\r\n\t */\r\n\t_msg_getDataChannelOptions(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_getDataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\tlet message = {\r\n\t\t\t\t\"channelID\" : options.channelID,\r\n\t\t\t\t\"options\" : {\r\n\t\t\t\t\t\"type\" : dch.config.type,\r\n\t\t\t\t\t\"mode\" : dch.config.mode,\r\n\t\t\t\t\t\"state\" : dch.state,\r\n\t\t\t\t\t\"netstate\" : dch.config._netState,\r\n\t\t\t\t\t\"loopTime\" : dch.config.loopTime,\r\n\t\t\t\t\t\"netLocation\" : dch.config.netLocation,\r\n\t\t\t\t\t\"socketPort\" : dch.config.socketPort\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tsocket.emit(nnets.CONSTANTS.Messages.DataChannelOptions, message);\t// Emit message DataChannelOptions\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_getDataChannelOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message SetDCOptions\r\n\t */\r\n\t_msg_SetDCOptions(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_SetDCOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\tlet _options = options.options;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tnnetm.setDCOptions(dch, _options);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot set data channel options. \" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet message = {\r\n\t\t\t\t\t\"channelID\" : options.channelID\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\tsocket.emit(nnets.CONSTANTS.Messages.DCOptionsUpdated, message);\t// Emit message DCOptionsUpdated\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_SetDCOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message initDC\r\n\t */\r\n\t_msg_initDC(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_initDC');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tdch.initDataChannel();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot initialize data channel .\" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_initDC');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message closeDC\r\n\t */\r\n\t_msg_closeDC(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_closeDC');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tdch.closeDataChannel();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot close data channel .\" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_closeDC');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message startDataChannel\r\n\t */\r\n\t_msg_startDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_startDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tdch.startDataChannel();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot start data channel .\" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_startDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message stopDataChannel\r\n\t */\r\n\t_msg_stopDataChannel(msg, socket, options){\r\n\t\t\r\n\t\tlet nnets = this;\r\n\t\tlet nnetm = nnets.nodeNetManager;\r\n\t\t\r\n\t\tconsole.log('<*> ST NodeNetService._msg_stopDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t\r\n\t\t\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet dchSearch = nnetm.getDataChannelByID(options.channelID);\r\n\t\t\tif (dchSearch.dataChannel === null) {\r\n\t\t\t\tthrow \"Data channel not found\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet dch = dchSearch.dataChannel;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\t\r\n\t\t\t\tdch.stopDataChannel();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthrow \"Cannot stop data channel .\" + e;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log('<EEE> ST NodeNetService._msg_stopDataChannel');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nlet NodeNetService_Lib = {\r\n\t\t\"NodeNetService\" : NodeNetService\r\n\t\t\r\n\t};\r\n\r\nmodule.exports = NodeNetService_Lib;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STNetwork\\es6"}